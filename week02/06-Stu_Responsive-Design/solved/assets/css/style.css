* {
  box-sizing: border-box;
}

body {
  font-family: Arial;
  margin: 0;
}

header {
  padding: 40px;
  text-align: center;
  background: #13293d;
  color: #fff;
}

/* 
What happens when we set the display property to flex? 
Links in the navigation bar become a flex box and all child elements become a felx item
*/
nav {
  display: flex;
  background-color: #d8a47f;
}

nav a {
  color: #13293d;
  padding: 14px 20px;
  text-decoration: none;
  text-align: center;
}

/* 
What is the flex-wrap property? 
It makes the flex items automatically stack to the next element when the flex item doesn't fit
Prevents side scrolling and overlap
*/
main {
  display: flex;
  flex-wrap: wrap;
}

aside {
  flex: 1;
  background-color: #b9c6ae;
  padding: 80px;
  text-align: center;
}


footer {
  padding: 20px;
  text-align: center;
  background: #13293d;
  color: #fff;
}

/* 
What does the justify-content property do? 
Aligns the flex items by what we set it to be on the x axis
In this case - element is centered on the x axis
*/
.products {
  flex: 4;
  background-color: #fff;
  padding: 20px;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

/* 
What is the flex property a shorthand property for?
1. flex-grow (How big to grow in proportion to other items)
2. flex-shrink (How small to shrink in proportion to other items)
3. flex-basis (What width do we want to initialize each flex item to be at)
What is it doing here? 
We are making each card not growable, not shrinkable, and we want it to start with width of 400px
*/
.card {
  border-style: solid;
  border-width: 1px;
  border-radius: 10px;
  padding: 10px;
  flex: 0 0 400px;
}

.card header {
  padding: 20px;
}

.card p {
  text-align: center;
}

.card img {
  width: 100%;
}

/* 
What does the flex-direction property define?
How to align the flex items on the y axis
What is it doing here? 
When screen goes below width of 768px the flex items will stack in column 
*/
@media screen and (max-width: 768px) {
  main,
  nav {
    flex-direction: column;
  }
}
